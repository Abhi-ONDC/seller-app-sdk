version: '2'

services:

  bpp-protocol-webserver:
    image: navdeep710/ondc-seller-app-protocol-webserver:v1
    container_name: bpp-protocol-webserver
    depends_on:
      - rabbitmq
    environment:
      ENV: prod
      RABBITMQ_HOST: ${RABBITMQ_HOST}
    expose:
      - 5555
    ports:
      - 5555:5555


  bpp-protocol-consumer:
    image: navdeep710/ondc-seller-app-protcol-consumer:v1
    container_name: bpp-protocol-consumer
    depends_on:
      - rabbitmq
    environment:
      ENV: prod
      RABBITMQ_HOST: ${RABBITMQ_HOST}


  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq


  strapi:
    image: navdeep710/ondc-seller-app-strapi:v1
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      DATABASE_SCHEMA: public
    volumes:
      - ./app:/srv/app
    ports:
      - '1338:1337'
    depends_on:
      - postgres

  seller:
    image: navdeep710/ondc-seller-app:v1
    environment:
      FIREBASE_SERVICE_ACCOUNT_JSON_PATH: lib/config/firebase-service-account.json
      STRAPI_SERVER_URL: strapi
      STRAPI_API_TOKEN: b716212a84567e1870bba07df14ab55a4b771fed217eb7b25dee9116df58835b11dece5c04555fc0c1c84de2673f0a3db16e4e045c76de9f00b9f6f8a8fbaa60138b7a3ade0a26c1753f96fb25a3faf0aaa0e92ceff4d40fc0a00dd613b5fda11562e40b68954f44355914149c572b60dac8e55742369bf9b0e8e10d13bb4262
    volumes:
      - ./app:/srv/app
    ports:
      - '3002:3001'
    depends_on:
      - strapi

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./data:/var/lib/postgresql/data

  nginx:
    build:
      context: bpp-nginx
      dockerfile: Dockerfile
    restart: "always"
    depends_on:
      - strapi
      - seller
      - bpp-protocol-webserver
    ports:
      - "80:80"
    # - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot


  certbot:
    image: certbot/certbot
    restart: "always"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"